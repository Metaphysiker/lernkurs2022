import{Controller}from"@hotwired/stimulus";import*as Ajax from"ajax";let sortable;export default class extends Controller{static targets=["name","output","sortable"];static values={accountId:Number,totalPossiblePoints:Number,pointsDeductionForMistake:Number,exerciseId:Number,exerciseClass:String,myPoints:Number,solution:Array};connect(){var t=this;import("sortablejs").then((e=>{sortable=e.Sortable.create(t.sortableTarget)}))}disconnect(){sortable.destroy()}check(){var t=sortable.toArray(),e=0;for(let s=0;s<this.solutionValue.length;s++)this.solutionValue[s]!==t[s]?(e++,document.querySelector('[data-id="'+this.solutionValue[s]+'"]').classList.add("bg-wrong-color")):(document.querySelector('[data-id="'+this.solutionValue[s]+'"]').classList.remove("bg-wrong-color"),document.querySelector('[data-id="'+this.solutionValue[s]+'"]').classList.add("bg-correct-color"));e>0?this.punishForMistake:(new Ajax.ajax).updateExerciseHistoryOfAccount(this.accountIdValue,this.exerciseClassValue,this.exerciseIdValue,this.myPointsValue).then((()=>{const t=new CustomEvent("finish_exercise",{detail:{points:this.myPointsValue}});window.dispatchEvent(t)}))}punishForMistake(){this.myPointsValue-this.pointsDeductionForMistakeValue<0?this.myPointsValue=0:this.myPointsValue=this.myPointsValue-this.pointsDeductionForMistakeValue}greet(){this.outputTarget.textContent=`Hello, ${this.nameTarget.value}!`}}